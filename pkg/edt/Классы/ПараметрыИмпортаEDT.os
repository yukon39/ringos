#Использовать asserts
#Использовать fs
#Использовать "../../../internal/localization"
#Использовать "../../../internal/utils"

#Область ОписаниеПеременных

Перем КаталогФайловКонфигурации; // Каталог для импорта файлов
Перем КаталогРабочейОбласти; // Каталог рабочей области
Перем КаталогПроекта; // Каталог проекта для импорта
Перем ИмяПроекта; // Имя импортируемого проекта
Перем ВерсияПлатформы; // Версия платформы
Перем ИмяБазовогоПроекта; // Имя базового проекта

Перем ЛокализованныеСтроки; // Локализованные строки

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Устанавливает каталог в которм содержатся файлы платформенной выгрузки
//
// Параметры:
//   ИмяКаталога - Строка - Каталог, содержащий файлы конфигурации платформы 1С:Предприятия.
//
//  Возвращаемое значение:
//   ПараметрыИмпортаEDT - Экземпляр текущего объекта для использованя в fluent-выражении
//
Функция ИспользоватьКаталогФайловКонфигурации(ИмяКаталога) Экспорт
	
	Ожидаем.Что(ИмяКаталога,
		ЛокализованныеСтроки.ИсключениеКаталогФайловКонфигурацииТип).ИмеетТип("Строка");
	Ожидаем.Что(ИмяКаталога,
		ЛокализованныеСтроки.ИсключениеКаталогФайловКонфигурацииЗаполненность).Заполнено();
	
	КаталогФайловКонфигурации = ФС.ПолныйПуть(ИмяКаталога);
	
	Возврат ЭтотОбъект;
	
КонецФункции

// Устанавливает каталог рабочей области
//
// Параметры:
//   ИмяКаталога - Строка - Каталог рабочего простанства для запуска 1C:Enterprise Development Tools.
//
//  Возвращаемое значение:
//    ПараметрыИмпортаEDT - Экземпляр текущего объекта для использованя в fluent-выражении
//
Функция ИспользоватьКаталогРабочейОбласти(ИмяКаталога) Экспорт
	
	Ожидаем.Что(ИмяКаталога,
		ЛокализованныеСтроки.ИсключениеКаталогРабочейОбластиТип).ИмеетТип("Строка");
	Ожидаем.Что(ИмяКаталога,
		ЛокализованныеСтроки.ИсключениеКаталогРабочейОбластиЗаполненность).Заполнено();
	
	КаталогРабочейОбласти = ФС.ПолныйПуть(ИмяКаталога);
	
	Возврат ЭтотОбъект;
	
КонецФункции

// Устанавливает каталог, в который будет импортирован проект
//
// Параметры:
//   ИмяКаталога - Строка - Каталог для создания и импорта проекта 1C:Enterprise Development Tools.
//
//  Возвращаемое значение:
//    ПараметрыИмпортаEDT - Экземпляр текущего объекта для использованя в fluent-выражении
//
Функция ИспользоватьКаталогПроекта(ИмяКаталога) Экспорт
	
	Ожидаем.Что(ИмяКаталога,
		ЛокализованныеСтроки.ИсключениеКаталогПроектаТип).ИмеетТип("Строка");
	Ожидаем.Что(ИмяКаталога,
		ЛокализованныеСтроки.ИсключениеКаталогПроектаЗаполненность).Заполнено();
	
	КаталогПроекта = ФС.ПолныйПуть(ИмяКаталога);
	
	Возврат ЭтотОбъект;
	
КонецФункции

// Устнавливает имя проекта, который будет создан в рабочей области
//
// Параметры:
//   ИмяПроектаИмпорт - Строка - Имя проекта рабочей области 1C:Enterprise Development Tools для создания и импорта.
//
//  Возвращаемое значение:
//    ПараметрыИмпортаEDT - Экземпляр текущего объекта для использованя в fluent-выражении
//
Функция ИспользоватьИмяПроекта(ИмяПроектаИмпорт) Экспорт
	
	Ожидаем.Что(ИмяПроектаИмпорт,
		ЛокализованныеСтроки.ИсключениеИмяПроектаТип).ИмеетТип("Строка");
	Ожидаем.Что(ИмяПроектаИмпорт,
		ЛокализованныеСтроки.ИсключениеИмяПроектаЗаполненность).Заполнено();
	
	ИмяПроекта = ИмяПроектаИмпорт;
	
	Возврат ЭтотОбъект;
	
КонецФункции

// Устанавливает версию платформы, которая будет указана в проекте
//
// Параметры:
//   НомерВерсии - Строка - Версия платформы 1С:Предприятия для указания в проекте
//
//  Возвращаемое значение:
//    ПараметрыИмпортаEDT - Экземпляр текущего объекта для использованя в fluent-выражении
//
Функция ИспользоватьВерсиюПлатформы(НомерВерсии) Экспорт
	
	Ожидаем.Что(НомерВерсии,
		ЛокализованныеСтроки.ИсключениеВерсияПлатформыТип).ИмеетТип("Строка");
	Ожидаем.Что(НомерВерсии,
		ЛокализованныеСтроки.ИсключениеВерсияПлатформыЗаполненность).Заполнено();
	
	ВерсияПлатформы = НомерВерсии;
	
	Возврат ЭтотОбъект;
	
КонецФункции

// Устанавливает имя базового проекта. Может быть использовано только для зависимого проекта.
//
// Параметры:
//   ИмяБазовогоПроектаИмпорт - Строка - Имя базового проекта для импортируемого проекта.
//
//  Возвращаемое значение:
//    ПараметрыИмпортаEDT - Экземпляр текущего объекта для использованя в fluent-выражении
//
Функция ИспользоватьИмяБазовогоПроекта(ИмяБазовогоПроектаИмпорт) Экспорт
	
	Ожидаем.Что(ИмяБазовогоПроектаИмпорт,
		ЛокализованныеСтроки.ИсключениеИмяБазовогоПроектаТип).ИмеетТип("Строка");
	Ожидаем.Что(ИмяБазовогоПроектаИмпорт,
		ЛокализованныеСтроки.ИсключениеИмяБазовогоПроектаЗаполненность).Заполнено();
	
	ИмяБазовогоПроекта = ИмяБазовогоПроектаИмпорт;
	
	Возврат ЭтотОбъект;
	
КонецФункции

// Каталог, содержащий файлы конфигурации платформы 1С:Предприятия.
//
//  Возвращаемое значение:
//    Строка - Имя каталога
//
Функция КаталогФайловКонфигурации() Экспорт
	Возврат КаталогФайловКонфигурации;
КонецФункции

// Каталог рабочего простанства для запуска 1C:Enterprise Development Tools.
//
//  Возвращаемое значение:
//   Строка - Имя каталога
//
Функция КаталогРабочейОбласти() Экспорт
	Возврат КаталогРабочейОбласти;
КонецФункции

// Каталог для создания и импорта проекта 1C:Enterprise Development Tools.
//
//  Возвращаемое значение:
//   Строка - Имя каталога
//
Функция КаталогПроекта() Экспорт
	Возврат КаталогПроекта;
КонецФункции

// Имя проекта рабочей области 1C:Enterprise Development Tools для создания и импорта.
//
//  Возвращаемое значение:
//   Строка - Имя проекта
//
Функция ИмяПроекта() Экспорт
	Возврат ИмяПроекта;
КонецФункции

// Версия платформы 1С:Предприятия для указания в проекте
//
//  Возвращаемое значение:
//   Строка - Версия платформы
//
Функция ВерсияПлатформы() Экспорт
	Возврат ВерсияПлатформы;
КонецФункции

// Имя базового проекта для импортируемого проекта.
//
//  Возвращаемое значение:
//   Строка - Имя проекта
//
Функция ИмяБазовогоПроекта() Экспорт
	Возврат ИмяБазовогоПроекта;
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПроверитьЗаполнение() Экспорт
	
	// BSLLS:NestedFunctionInParameters-off
	Ожидаем.Что(КаталогФайловКонфигурации,
		ЛокализованныеСтроки.ИсключениеКаталогФайловКонфигурацииЗаполненность).Заполнено();
	
	Ожидаем.Что(КаталогРабочейОбласти,
		ЛокализованныеСтроки.ИсключениеКаталогРабочейОбластиЗаполненность).Заполнено();
	
	Ожидаем.Что(ЗначениеЗаполнено(КаталогПроекта) И ЗначениеЗаполнено(ИмяПроекта),
		ЛокализованныеСтроки.ИсключениеУказаныКаталогИИмяПроекта).ЕстьЛожь();
	
	Ожидаем.Что(ЗначениеЗаполнено(КаталогПроекта) ИЛИ ЗначениеЗаполнено(ИмяПроекта),
		ЛокализованныеСтроки.ИсключениеКаталогИИмяПроектаОтсутствуют).ЕстьИстина();
	// BSLLS:NestedFunctionInParameters-on
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриСозданииОбъекта()
	
	КаталогФайловКонфигурации = "";
	КаталогРабочейОбласти = "";
	КаталогПроекта = "";
	ИмяПроекта = "";
	ВерсияПлатформы = "";
	ИмяБазовогоПроекта = "";
	
	ЛокализованныеСтроки = ПараметрыПриложения.ЛокализованныеСтроки(Локализация_МодульEDT);
	
КонецПроцедуры

#КонецОбласти